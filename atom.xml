<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Charles Wei&#39;s Blog</title>
  <subtitle>Why so serious?</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://charleswei.me/"/>
  <updated>2016-08-02T12:39:44.000Z</updated>
  <id>http://charleswei.me/</id>
  
  <author>
    <name>Charles Wei</name>
    <email>charles.wei1920@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android ImageView 的scaleType属性</title>
    <link href="http://charleswei.me/2016/07/24/Android-ImageView-scaleType/"/>
    <id>http://charleswei.me/2016/07/24/Android-ImageView-scaleType/</id>
    <published>2016-07-24T11:12:32.000Z</published>
    <updated>2016-08-02T12:39:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>##Android ImageView scaleType属性介绍<br>| 名称 | 含义  |<br>| ————- |————-|<br>| center | 使图像在视图中居中，不缩放 |<br>| centerCrop | 以填满视图为目的，以视图中心为基准，等比缩放图像，超过视图部分做剪裁 |<br>| centerInside | 在视图中居中完全显示图像 |<br>|matrix|从视图的左上角开始显示图像，超出视图大小部分做剪裁|<br>|fitCenter|图像等比例扩大或缩小到等于视图的宽度或高度，使图像完全显示，并居中|<br>|fitStart|等比例缩放图像使宽（高）等于视图的宽（高），使图像完全显示，并位于视图上部（左部）|<br>|fitEnd|等比例缩放图像使宽（高）等于视图的宽（高），使图像完全显示，并位于视图下部（右部）|<br>|fitXY|拉伸图像，使图像填满视图|</p>
<hr>
<a id="more"></a>
<p>##示例及详解<br>示例原图<br><img src="http://img.blog.csdn.net/20160712224500314" alt="这里写图片描述"></p>
<hr>
<p>##<code>android:scaleType=&quot;center&quot;</code><br>保持图像的大小，将图像居中显示在视图中，若图像的尺寸大于视图的尺寸，则超出视图尺寸的部分将被剪裁。如图1-1，1-2：<br><img src="http://img.blog.csdn.net/20160712213637817" alt="图1-1"><br>图1-1</p>
<p><img src="http://img.blog.csdn.net/20160712213956102" alt="图1-2"><br>图1-2</p>
<hr>
<p>##<code>android:scaleType=&quot;centerCrop&quot;</code><br>等比例放大图像，以视图中心为基准，填满整个视图，超过视图尺寸的部分将被剪裁。如图2-1，2-2：<br><img src="http://img.blog.csdn.net/20160712215551592" alt="图2-1 match_parent"><br>图2-1</p>
<p><img src="http://img.blog.csdn.net/20160712215745158" alt="图2-2 固定ImageView大小"><br>图2-2</p>
<hr>
<p>##<code>android:scaleType=&quot;centerInside&quot;</code><br>等比例缩小图像以使图像完全显示在视图中，若图像尺寸小于视图尺寸，则不对图像进行处理，居中显示。若图像尺寸大于视图，则等比例缩小图像，使图像宽（高）等于或小于视图宽（高），居中显示。如图3-1，3-2，3-3：<br><img src="http://img.blog.csdn.net/20160712220431682" alt="图3-1"><br>图3-1</p>
<p><img src="http://img.blog.csdn.net/20160712220456370" alt="图3-2 缩小图像高至等于视图高"><br>图3-2 缩小图像高至等于视图高</p>
<p><img src="http://img.blog.csdn.net/20160712220535100" alt="图3-3缩小图像宽至等于视图宽"><br>图3-3 缩小图像宽至等于视图宽</p>
<hr>
<p>##<code>android:scaleType=&quot;matrix&quot;</code><br>不改变图像的大小，从左上角开始显示图像，图像尺寸若大于视图尺寸，则多余的部分会被裁剪。类似center，只是图像显示的位置不同。如图4-1，4-2：</p>
<p><img src="http://img.blog.csdn.net/20160712221108050" alt="图4-1"><br>图4-1</p>
<p><img src="http://img.blog.csdn.net/20160712221140086" alt="图4-2"><br>图4-2</p>
<hr>
<p>##<code>android:scaleType=&quot;fitCenter&quot;</code><br>等比例放大或缩小图像使图像的高（宽）等于视图的高（宽），然后居中显示。与center的区别是fitCenter不剪裁而是缩放，以使图像全部显示；与centerCrop的区别是fitCenter不以填满视图为目的，是以全部显示图像为目的；与centerInside的却别是fitCenter等比缩放至宽或高等于视图，而centerInside则只缩小不放大。如图5-1，5-2，5-3：</p>
<p><img src="http://img.blog.csdn.net/20160712222221075" alt="图5-1"><br>图5-1</p>
<p><img src="http://img.blog.csdn.net/20160712222236763" alt="图5-2"><br>图5-2</p>
<p><img src="http://img.blog.csdn.net/20160712222249981" alt="图5-3"><br>图5-3</p>
<hr>
<p>##<code>android:scaleType=&quot;fitStart&quot;</code>  <code>android:scaleType=&quot;fitEnd&quot;</code><br>fitStart：等比例缩放图像使宽（高）等于视图的宽（高），使图像完全显示，并位于视图上部（左部）。fitEnd：等比例缩放图像使宽（高）等于视图的宽（高），使图像完全显示，并位于视图下部（右部）。与fitCenter类似，只是显示图片位置的区别。如图6-1，6-2，6-3，6-4：</p>
<p><img src="http://img.blog.csdn.net/20160712223634879" alt="图6-1"><br>图6-1</p>
<p><img src="http://img.blog.csdn.net/20160712223651973" alt="图6-2"><br>图6-2</p>
<p><img src="http://img.blog.csdn.net/20160712223708067" alt="图6-3"><br>图6-3</p>
<p><img src="http://img.blog.csdn.net/20160712223726239" alt="图6-4"><br>图6-4</p>
<hr>
<p>##<code>android:scaleType=&quot;fitXY&quot;</code><br>以填满整个视图为目的，拉伸图片。与centerCrop的区别是fitXY不剪裁，拉伸以使图像填满，图像会变形。如图7-1：</p>
<p><img src="http://img.blog.csdn.net/20160712224406491" alt="图7-1"><br>图7-1</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##Android ImageView scaleType属性介绍&lt;br&gt;| 名称 | 含义  |&lt;br&gt;| ————- |————-|&lt;br&gt;| center | 使图像在视图中居中，不缩放 |&lt;br&gt;| centerCrop | 以填满视图为目的，以视图中心为基准，等比缩放图像，超过视图部分做剪裁 |&lt;br&gt;| centerInside | 在视图中居中完全显示图像 |&lt;br&gt;|matrix|从视图的左上角开始显示图像，超出视图大小部分做剪裁|&lt;br&gt;|fitCenter|图像等比例扩大或缩小到等于视图的宽度或高度，使图像完全显示，并居中|&lt;br&gt;|fitStart|等比例缩放图像使宽（高）等于视图的宽（高），使图像完全显示，并位于视图上部（左部）|&lt;br&gt;|fitEnd|等比例缩放图像使宽（高）等于视图的宽（高），使图像完全显示，并位于视图下部（右部）|&lt;br&gt;|fitXY|拉伸图像，使图像填满视图|&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="Android" scheme="http://charleswei.me/categories/Android/"/>
    
    
      <category term="Android" scheme="http://charleswei.me/tags/Android/"/>
    
      <category term="ImageView" scheme="http://charleswei.me/tags/ImageView/"/>
    
  </entry>
  
  <entry>
    <title>Android 身份证校验类</title>
    <link href="http://charleswei.me/2016/07/24/Android-IDCard-verify/"/>
    <id>http://charleswei.me/2016/07/24/Android-IDCard-verify/</id>
    <published>2016-07-24T11:09:31.000Z</published>
    <updated>2016-08-02T12:39:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>##校验身份证是否合法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IDCardUtil</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String errorInfo = <span class="string">""</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getErrorInfo</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> errorInfo;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">checkIDCard</span><span class="params">(String strIDCard)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            String[] verifyCodes = &#123;<span class="string">"1"</span>, <span class="string">"0"</span>, <span class="string">"x"</span>, <span class="string">"9"</span>, <span class="string">"8"</span>, <span class="string">"7"</span>, <span class="string">"6"</span>, <span class="string">"5"</span>, <span class="string">"4"</span>,</div><div class="line">                    <span class="string">"3"</span>, <span class="string">"2"</span>&#125;;</div><div class="line">            String[] wCodes = &#123;<span class="string">"7"</span>, <span class="string">"9"</span>, <span class="string">"10"</span>, <span class="string">"5"</span>, <span class="string">"8"</span>, <span class="string">"4"</span>, <span class="string">"2"</span>, <span class="string">"1"</span>, <span class="string">"6"</span>, <span class="string">"3"</span>, <span class="string">"7"</span>,</div><div class="line">                    <span class="string">"9"</span>, <span class="string">"10"</span>, <span class="string">"5"</span>, <span class="string">"8"</span>, <span class="string">"4"</span>, <span class="string">"2"</span>&#125;;</div><div class="line">            String exEnd = <span class="string">""</span>;  <span class="comment">//除最后一位</span></div><div class="line">            <span class="comment">// ================ 号码的长度 15位或18位 ================</span></div><div class="line">            <span class="keyword">if</span> (strIDCard.length() != <span class="number">15</span> &amp;&amp; strIDCard.length() != <span class="number">18</span>) &#123;</div><div class="line">                errorInfo = <span class="string">"身份证号码长度应该为15位或18位"</span>;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="comment">// ================ 数字 除最后一位都为数字 ================</span></div><div class="line">            <span class="keyword">if</span> (strIDCard.length() == <span class="number">18</span>) &#123;</div><div class="line">                exEnd = strIDCard.substring(<span class="number">0</span>, <span class="number">17</span>);</div><div class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (strIDCard.length() == <span class="number">15</span>) &#123;</div><div class="line">                exEnd = strIDCard.substring(<span class="number">0</span>, <span class="number">6</span>) + <span class="string">"19"</span> + strIDCard.substring(<span class="number">6</span>, <span class="number">15</span>);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (!isNumeric(exEnd)) &#123;</div><div class="line">                errorInfo = <span class="string">"身份证15位号码都应为数字；18位号码除最后一位外，都应为数字"</span>;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="comment">// ================ 出生年月是否有效 ================</span></div><div class="line">            String strYear = exEnd.substring(<span class="number">6</span>, <span class="number">10</span>);<span class="comment">// 年份</span></div><div class="line">            String strMonth = exEnd.substring(<span class="number">10</span>, <span class="number">12</span>);<span class="comment">// 月份</span></div><div class="line">            String strDay = exEnd.substring(<span class="number">12</span>, <span class="number">14</span>);<span class="comment">// 月份</span></div><div class="line">            <span class="keyword">if</span> (!isDataFormat(strYear + <span class="string">"-"</span> + strMonth + <span class="string">"-"</span> + strDay)) &#123;</div><div class="line">                errorInfo = <span class="string">"身份证生日无效"</span>;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line">            GregorianCalendar gc = <span class="keyword">new</span> GregorianCalendar();</div><div class="line">            SimpleDateFormat s = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>);</div><div class="line">            <span class="keyword">if</span> ((gc.get(Calendar.YEAR) - Integer.parseInt(strYear)) &gt; <span class="number">150</span></div><div class="line">                    || (gc.getTime().getTime() - s.parse(</div><div class="line">                    strYear + <span class="string">"-"</span> + strMonth + <span class="string">"-"</span> + strDay).getTime()) &lt; <span class="number">0</span>) &#123;</div><div class="line">                errorInfo = <span class="string">"身份证生日不在有效范围"</span>;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (Integer.parseInt(strMonth) &gt; <span class="number">12</span> || Integer.parseInt(strMonth) == <span class="number">0</span>) &#123;</div><div class="line">                errorInfo = <span class="string">"身份证月份无效"</span>;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span> (Integer.parseInt(strDay) &gt; <span class="number">31</span> || Integer.parseInt(strDay) == <span class="number">0</span>) &#123;</div><div class="line">                errorInfo = <span class="string">"身份证日期无效"</span>;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="comment">// ================ 地区码是否有效 ================</span></div><div class="line">            Hashtable h = GetAreaCode();</div><div class="line">            <span class="keyword">if</span> (h.get(exEnd.substring(<span class="number">0</span>, <span class="number">2</span>)) == <span class="keyword">null</span>) &#123;</div><div class="line">                errorInfo = <span class="string">"身份证地区编码错误。"</span>;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="comment">// ================ 最后一位校验位计算 ================</span></div><div class="line">            <span class="keyword">int</span> totalMul = <span class="number">0</span>;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">17</span>; i++) &#123;</div><div class="line">                totalMul = totalMul</div><div class="line">                        + Integer.parseInt(String.valueOf(exEnd.charAt(i)))</div><div class="line">                        * Integer.parseInt(wCodes[i]);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">int</span> modValue = totalMul % <span class="number">11</span>;</div><div class="line">            String strVerifyCode = verifyCodes[modValue];</div><div class="line">            exEnd = exEnd + strVerifyCode;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (strIDCard.length() == <span class="number">18</span>) &#123;</div><div class="line">                <span class="keyword">if</span> (!exEnd.equals(strIDCard)) &#123;</div><div class="line">                    errorInfo = <span class="string">"身份证无效，不是合法的身份证号码"</span>;</div><div class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            MyLog.info(e);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 功能：设置地区编码</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span> Hashtable 对象</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Hashtable <span class="title">GetAreaCode</span><span class="params">()</span> </span>&#123;</div><div class="line">        Hashtable hashtable = <span class="keyword">new</span> Hashtable();</div><div class="line">        hashtable.put(<span class="string">"11"</span>, <span class="string">"北京"</span>);</div><div class="line">        hashtable.put(<span class="string">"12"</span>, <span class="string">"天津"</span>);</div><div class="line">        hashtable.put(<span class="string">"13"</span>, <span class="string">"河北"</span>);</div><div class="line">        hashtable.put(<span class="string">"14"</span>, <span class="string">"山西"</span>);</div><div class="line">        hashtable.put(<span class="string">"15"</span>, <span class="string">"内蒙古"</span>);</div><div class="line">        hashtable.put(<span class="string">"21"</span>, <span class="string">"辽宁"</span>);</div><div class="line">        hashtable.put(<span class="string">"22"</span>, <span class="string">"吉林"</span>);</div><div class="line">        hashtable.put(<span class="string">"23"</span>, <span class="string">"黑龙江"</span>);</div><div class="line">        hashtable.put(<span class="string">"31"</span>, <span class="string">"上海"</span>);</div><div class="line">        hashtable.put(<span class="string">"32"</span>, <span class="string">"江苏"</span>);</div><div class="line">        hashtable.put(<span class="string">"33"</span>, <span class="string">"浙江"</span>);</div><div class="line">        hashtable.put(<span class="string">"34"</span>, <span class="string">"安徽"</span>);</div><div class="line">        hashtable.put(<span class="string">"35"</span>, <span class="string">"福建"</span>);</div><div class="line">        hashtable.put(<span class="string">"36"</span>, <span class="string">"江西"</span>);</div><div class="line">        hashtable.put(<span class="string">"37"</span>, <span class="string">"山东"</span>);</div><div class="line">        hashtable.put(<span class="string">"41"</span>, <span class="string">"河南"</span>);</div><div class="line">        hashtable.put(<span class="string">"42"</span>, <span class="string">"湖北"</span>);</div><div class="line">        hashtable.put(<span class="string">"43"</span>, <span class="string">"湖南"</span>);</div><div class="line">        hashtable.put(<span class="string">"44"</span>, <span class="string">"广东"</span>);</div><div class="line">        hashtable.put(<span class="string">"45"</span>, <span class="string">"广西"</span>);</div><div class="line">        hashtable.put(<span class="string">"46"</span>, <span class="string">"海南"</span>);</div><div class="line">        hashtable.put(<span class="string">"50"</span>, <span class="string">"重庆"</span>);</div><div class="line">        hashtable.put(<span class="string">"51"</span>, <span class="string">"四川"</span>);</div><div class="line">        hashtable.put(<span class="string">"52"</span>, <span class="string">"贵州"</span>);</div><div class="line">        hashtable.put(<span class="string">"53"</span>, <span class="string">"云南"</span>);</div><div class="line">        hashtable.put(<span class="string">"54"</span>, <span class="string">"西藏"</span>);</div><div class="line">        hashtable.put(<span class="string">"61"</span>, <span class="string">"陕西"</span>);</div><div class="line">        hashtable.put(<span class="string">"62"</span>, <span class="string">"甘肃"</span>);</div><div class="line">        hashtable.put(<span class="string">"63"</span>, <span class="string">"青海"</span>);</div><div class="line">        hashtable.put(<span class="string">"64"</span>, <span class="string">"宁夏"</span>);</div><div class="line">        hashtable.put(<span class="string">"65"</span>, <span class="string">"新疆"</span>);</div><div class="line">        hashtable.put(<span class="string">"71"</span>, <span class="string">"台湾"</span>);</div><div class="line">        hashtable.put(<span class="string">"81"</span>, <span class="string">"香港"</span>);</div><div class="line">        hashtable.put(<span class="string">"82"</span>, <span class="string">"澳门"</span>);</div><div class="line">        hashtable.put(<span class="string">"91"</span>, <span class="string">"国外"</span>);</div><div class="line">        <span class="keyword">return</span> hashtable;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 验证日期字符串是否是YYYY-MM-DD格式</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> str</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isDataFormat</span><span class="params">(String str)</span> </span>&#123;</div><div class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</div><div class="line">        String regxStr = <span class="string">"^((\\d&#123;2&#125;(([02468][048])|([13579][26]))[\\-\\/\\s]?((((0?[13578])|(1[02]))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])))))|(\\d&#123;2&#125;(([02468][1235679])|([13579][01345789]))[\\-\\/\\s]?((((0?[13578])|(1[02]))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\\-\\/\\s]?((0?[1-9])|(1[0-9])|(2[0-8]))))))(\\s(((0?[0-9])|([1-2][0-3]))\\:([0-5]?[0-9])((\\s)|(\\:([0-5]?[0-9])))))?$"</span>;</div><div class="line">        Pattern pattern1 = Pattern.compile(regxStr);</div><div class="line">        Matcher isNo = pattern1.matcher(str);</div><div class="line">        <span class="keyword">if</span> (isNo.matches()) &#123;</div><div class="line">            flag = <span class="keyword">true</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> flag;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 功能：判断字符串是否为数字</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> str</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isNumeric</span><span class="params">(String str)</span> </span>&#123;</div><div class="line">        Pattern pattern = Pattern.compile(<span class="string">"[0-9]*"</span>);</div><div class="line">        Matcher isNum = pattern.matcher(str);</div><div class="line">        <span class="keyword">if</span> (isNum.matches()) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##校验身份证是否合法&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div c
    
    </summary>
    
      <category term="Android" scheme="http://charleswei.me/categories/Android/"/>
    
    
      <category term="Android" scheme="http://charleswei.me/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android_CrashHandler 自定义崩溃异常捕获</title>
    <link href="http://charleswei.me/2016/07/24/Android-CrashHandler/"/>
    <id>http://charleswei.me/2016/07/24/Android-CrashHandler/</id>
    <published>2016-07-24T09:23:13.000Z</published>
    <updated>2016-08-02T12:39:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>#当APP 异常崩溃时，使用Toast提示，并关闭APP，收集错误信息保存并上报</p>
<p>需求：由于android机型的碎片化，我们在开发时无法对所以机型进行测试，因此在可能的崩溃发生时，我们应当做一些事情来为我们提供更多信息以便改进，同时也能然崩溃发生时的用户体验得到一些改善。例如程序崩溃后的重启APP、系统dialog等并不为我们想要，因此可以在APP崩溃时进行一些处理。由于现在一些第三方提供的崩溃日志的捕获上传做得也不错，对于类似我们这些中小型公司，可以集成如腾讯的Bugly、百度的测试云平台等第三方SDK进行崩溃日志的收集及上传，在我们自定义的CrashHandler里做一些交互处理即可。如使用Toast进行崩溃提示、在崩溃时关掉APP避免重启。</p>
<a id="more"></a>
<p>###步骤</p>
<ul>
<li><strong>创建CrashHandler类，继承UncaughtExceptionHandler 接口</strong></li>
<li><strong>编写崩溃处理逻辑</strong></li>
<li><strong>在自定义application中注册CrashHandler</strong></li>
</ul>
<h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CrashHandler</span> <span class="keyword">implements</span> <span class="title">Thread</span>.<span class="title">UncaughtExceptionHandler</span> </span>&#123;</div><div class="line">   <span class="keyword">private</span> <span class="keyword">static</span> CrashHandler instance = <span class="keyword">new</span> CrashHandler();</div><div class="line">   <span class="keyword">private</span> Context mContext;</div><div class="line"></div><div class="line">   <span class="function"><span class="keyword">private</span> <span class="title">CrashHandler</span><span class="params">()</span> </span>&#123;&#125;</div><div class="line"></div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> CrashHandler <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">       <span class="keyword">return</span> instance;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCustomCrashHanler</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">       mContext = context;</div><div class="line">       <span class="comment">//崩溃时将catch住异常</span></div><div class="line">       Thread.setDefaultUncaughtExceptionHandler(<span class="keyword">this</span>);</div><div class="line">   &#125;</div><div class="line"></div><div class="line"><span class="comment">//崩溃时触发</span></div><div class="line">   <span class="meta">@Override</span></div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">uncaughtException</span><span class="params">(Thread thread, Throwable ex)</span> </span>&#123;</div><div class="line">    <span class="comment">//使用Toast进行提示</span></div><div class="line">       showToast(mContext, <span class="string">"很抱歉，程序异常即将退出！"</span>);</div><div class="line">       <span class="comment">//延时退出</span></div><div class="line">       <span class="keyword">try</span> &#123;</div><div class="line">           thread.sleep(<span class="number">2000</span>);</div><div class="line">       &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">           e.printStackTrace();</div><div class="line">       &#125;</div><div class="line">       <span class="comment">//关闭APP</span></div><div class="line">    Util.exic();</div><div class="line">   &#125;</div><div class="line"></div><div class="line"><span class="comment">//线程中展示Toast</span></div><div class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showToast</span><span class="params">(<span class="keyword">final</span> Context context, <span class="keyword">final</span> String msg)</span> </span>&#123;</div><div class="line">       <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line"></div><div class="line">           <span class="meta">@Override</span></div><div class="line">           <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">               Looper.prepare();</div><div class="line">               Toast.makeText(context, msg, Toast.LENGTH_LONG).show();</div><div class="line">               Looper.loop();</div><div class="line">           &#125;</div><div class="line">       &#125;).start();</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在自定义Application的onCreate()函数中注册CrashHandle.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</div><div class="line">       <span class="keyword">super</span>.onCreate();</div><div class="line">        CrashHandler crashHandler = CrashHandler.getInstance();</div><div class="line">           crashHandler.setCustomCrashHanler(getApplicationContext());</div><div class="line">           ......</div><div class="line">       &#125;</div></pre></td></tr></table></figure></p>
<p>如果是首次自定义Application，别忘了在AndroidManifest.xml中注册。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">application</span></span></div><div class="line">        <span class="attr">android:name</span>=<span class="string">".MyApplication"</span></div><div class="line">        <span class="attr">......</span></div></pre></td></tr></table></figure></p>
<p>自定义工具类，关闭所有activity以关闭APP。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Util</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> List&lt;Activity&gt; activityList = <span class="keyword">new</span> LinkedList&lt;Activity&gt;();</div><div class="line">	</div><div class="line">	 <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addActivity</span><span class="params">(Activity activity)</span> </span>&#123;</div><div class="line">        activityList.add(activity);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">removeActivity</span><span class="params">(Activity activity)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (activityList != <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">boolean</span> bResult = activityList.remove(activity);</div><div class="line">            <span class="keyword">while</span> (bResult) &#123;</div><div class="line">                bResult = activityList.remove(activity);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">exic</span><span class="params">()</span></span>&#123;</div><div class="line">		 <span class="keyword">if</span> (activityList.size() &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">for</span> (Activity activitys : MyActivity.activityList) &#123;</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    activitys.finish();</div><div class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        System.exit(<span class="number">0</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>在自定义的activity基类的onCreate()和onDestroy()中调用。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">    Util.addActivity(<span class="keyword">this</span>);</div><div class="line">    ......</div><div class="line">  &#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</div><div class="line">   removeActivity(_this);</div><div class="line">   ......</div><div class="line">   <span class="keyword">super</span>.onDestroy();</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p>最后在程序的一处写个异常如 <code>int i=1/0;</code> 运行到那里进行异常测试。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#当APP 异常崩溃时，使用Toast提示，并关闭APP，收集错误信息保存并上报&lt;/p&gt;
&lt;p&gt;需求：由于android机型的碎片化，我们在开发时无法对所以机型进行测试，因此在可能的崩溃发生时，我们应当做一些事情来为我们提供更多信息以便改进，同时也能然崩溃发生时的用户体验得到一些改善。例如程序崩溃后的重启APP、系统dialog等并不为我们想要，因此可以在APP崩溃时进行一些处理。由于现在一些第三方提供的崩溃日志的捕获上传做得也不错，对于类似我们这些中小型公司，可以集成如腾讯的Bugly、百度的测试云平台等第三方SDK进行崩溃日志的收集及上传，在我们自定义的CrashHandler里做一些交互处理即可。如使用Toast进行崩溃提示、在崩溃时关掉APP避免重启。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://charleswei.me/categories/Android/"/>
    
    
      <category term="Android" scheme="http://charleswei.me/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Hexo的安装和使用（mac篇）</title>
    <link href="http://charleswei.me/2016/07/21/HowToInstallHexoForMac/"/>
    <id>http://charleswei.me/2016/07/21/HowToInstallHexoForMac/</id>
    <published>2016-07-21T13:54:41.000Z</published>
    <updated>2016-07-24T09:14:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="external">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。官方文档<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">传送门</a>。Hexo的安装是个很快速简便的过程，但依然还是有不少坑。这里记录个我的安装过程，给大家一些参考。以下是我安装时系统及软件版本，请尽量保证不低于这些版本号：</p>
<ul>
<li><p>OS ： OS X EI Capitan 10.11.3</p>
</li>
<li><p>XCode : 7.3</p>
</li>
<li><p>hexo : 3.2.2</p>
</li>
<li><p>node : 4.4.7</p>
</li>
<li><p>git : 2.6.4</p>
</li>
</ul>
<a id="more"></a>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h3><p>需要安装 Node.js 和 Git 两个应用程序，直接到官网安装最新版本即可，如已安装请跳过。</p>
<ul>
<li><p><a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js </a>官网</p>
</li>
<li><p><a href="https://git-scm.com/" target="_blank" rel="external">Git </a>官网</p>
</li>
</ul>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>安装完Node.js 及 Git 后，即可使用npm来安装Hexo：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli</div></pre></td></tr></table></figure>
<h2 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h2><p>创建一个目录用来作为你的blog目录，例如 MyBlog；并在该目录中进行Hexo的初始化：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo init MyB<span class="built_in">log</span></div><div class="line">$ <span class="built_in">cd</span> ~/MyB<span class="built_in">log</span>/</div><div class="line">$ npm install</div></pre></td></tr></table></figure>
<p>新建完成后，得到以下目录：</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">·</div><div class="line">|<span class="string">-- _config.yml</span></div><div class="line">|<span class="string">-- package.json</span></div><div class="line">|<span class="string">-- scaffolds</span></div><div class="line">|<span class="string">-- source</span></div><div class="line">|<span class="string">   </span>|<span class="string">-- _drafts</span></div><div class="line">|<span class="string">   </span>|<span class="string">-- _posts</span></div><div class="line">|<span class="string">-- themes</span></div></pre></td></tr></table></figure>
<p>至此，你就完成了Hexo的安装及初始化，接下来我们就可以进行本地的预览啦：<br>先安装hexo server<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo npm install hexo-server</div></pre></td></tr></table></figure></p>
<p>然后生成静态页面并打开hexo本地服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo generate   (或 hexo g)</div><div class="line">$ hexo server</div></pre></td></tr></table></figure></p>
<p>按命令行提示，打开  http:\/\/localhost:4000\/  即可看到默认主题的默认页面了。<br>可能加载会很慢，因为默认主题中使用了些Google的资源，后面更换主题就会快很多了。</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="与Github账户关联"><a href="#与Github账户关联" class="headerlink" title="与Github账户关联"></a>与Github账户关联</h3><p>首先需要去<a href="https://github.com/" target="_blank" rel="external">Github</a>注册一个账号，并新建一个名为 [your_account].github.io 的仓库。<br>然后打开前面创建的MyBlog目录下的 <strong>_config.yml </strong>文件，在修改最下方的<strong>deploy</strong>为：<br><strong>*注意，冒号后面一定要加空格</strong><br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">deploy</span>:</div><div class="line">  <span class="attribute">type</span>: git</div><div class="line">  <span class="attribute">repo</span>: <span class="attribute">gihub</span>: <span class="attribute">https</span>:<span class="comment">//github.com/[your_account]/[your_accout].github.io.git</span></div><div class="line">  <span class="attribute">branch</span>: master</div></pre></td></tr></table></figure></p>
<p>接下来安装hexo的git部署，在命令行中执行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p>最后，将生成静态页面并部署到github的仓库中，执行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ hexo d -g </div><div class="line">或者</div><div class="line">$ hexo generate</div><div class="line">$ hexo deploy</div></pre></td></tr></table></figure></p>
<p>当提示 <strong> INFO Deploy done: git  </strong>即上传成功，这时就可以通过 <strong>http:\/\/[your_account].github.io</strong> 来访问你的个人站点了。<br>这里涉及了<a href="https://help.github.com/articles/what-is-github-pages/" target="_blank" rel="external">github pages </a>的相关内容，有兴趣的可以去了解一下。</p>
<h3 id="hexo的基本配置"><a href="#hexo的基本配置" class="headerlink" title="hexo的基本配置"></a>hexo的基本配置</h3><p>以下是hexo配置文件 <strong>_config.yml</strong> 的基本内容及基本设置，更多个性化设置请参考<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">官方文档</a>：<br><figure class="highlight ldif"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Site  ##页面信息</span></div><div class="line"><span class="attribute">title</span>: Who's Blog  ##标题，即浏览器标签栏显示的内容</div><div class="line"><span class="attribute">subtitle</span>: Why so serious?  ##副标题</div><div class="line"><span class="attribute">description</span>:        ##描述，简介</div><div class="line"><span class="attribute">author</span>: Charles Wei  ##作者</div><div class="line"><span class="attribute">language</span>: zh-CN  ##语言</div><div class="line"><span class="attribute">timezone</span>: Asia/Shanghai  ##时区</div><div class="line"></div><div class="line"><span class="comment"># URL</span></div><div class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></div><div class="line"><span class="attribute">url</span>: http://wwww.charleswei.me  ##域名，后面自定义域名后，写在这里，用 .github.io的话，这里用默认的不用改</div><div class="line"><span class="attribute">root</span>: /</div><div class="line"><span class="attribute">permalink</span>: :year/:month/:day/:title/</div><div class="line"><span class="attribute">permalink_defaults:</span></div><div class="line"></div><div class="line"># Directory  ##文件目录，可不改</div><div class="line">source_dir: source</div><div class="line"><span class="attribute">public_dir</span>: public</div><div class="line"><span class="attribute">tag_dir</span>: tags</div><div class="line"><span class="attribute">archive_dir</span>: archives</div><div class="line"><span class="attribute">category_dir</span>: categories</div><div class="line"><span class="attribute">code_dir</span>: downloads/code</div><div class="line"><span class="attribute">i18n_dir</span>: :lang</div><div class="line"><span class="attribute">skip_render:</span></div><div class="line"># Writing  ##静态页面生成属性，可不改</div><div class="line">new_post_name: :year-:month-:day-:title.md # File name of new posts</div><div class="line"><span class="attribute">default_layout</span>: post</div><div class="line"><span class="attribute">titlecase</span>: false # Transform title into titlecase</div><div class="line"><span class="attribute">external_link</span>: true # Open external links in new tab</div><div class="line"><span class="attribute">filename_case</span>: 0</div><div class="line"><span class="attribute">render_drafts</span>: false</div><div class="line"><span class="attribute">post_asset_folder</span>: false</div><div class="line"><span class="attribute">relative_link</span>: false</div><div class="line"><span class="attribute">future</span>: true</div><div class="line"><span class="attribute">highlight</span>: </div><div class="line">  enable: true </div><div class="line">  line_number: true </div><div class="line">  auto_detect: false </div><div class="line">  tab_replace:</div><div class="line">  </div><div class="line"><span class="comment"># Category &amp; Tag ##标签，可不改</span></div><div class="line"><span class="attribute">default_category</span>: uncategorized</div><div class="line"><span class="attribute">category_map:</span></div><div class="line">tag_map:</div><div class="line"># Date / Time format  ##时间格式，可不改</div><div class="line">## Hexo uses Moment.js to parse and display date</div><div class="line">## You can customize the date format as defined in</div><div class="line">## http://momentjs.com/docs/#/displaying/format/</div><div class="line">date_format: YYYY-MM-DD</div><div class="line"><span class="attribute">time_format</span>: HH:mm:ss</div><div class="line"></div><div class="line"><span class="comment"># Pagination ##每页显示文章数，按需改</span></div><div class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></div><div class="line"><span class="attribute">per_page</span>: 10</div><div class="line"><span class="attribute">pagination_dir</span>: page</div><div class="line"><span class="comment"># Extensions ##主题设置</span></div><div class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></div><div class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></div><div class="line"><span class="attribute">theme</span>: indigo</div><div class="line"></div><div class="line"><span class="comment"># Deployment  ##git部署关联</span></div><div class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></div><div class="line"><span class="attribute">deploy</span>: </div><div class="line">  type: git </div><div class="line">  repo: github: https://github.com/glassweichao/glassweichao.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<h3 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h3><p>Hexo具有高定制的主题效果，你可以从Hexo的<a href="https://hexo.io/themes/" target="_blank" rel="external">主题库</a>中选择合适的主题，也可以自己制作。<br>以我现在使用的<a href="https://github.com/yscoder/hexo-theme-indigo" target="_blank" rel="external">indigo</a>主题为例。首先将主题库clone到MyBlog目录下的themes目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> git@github.com:yscoder/hexo-theme-indigo.git themes/indigo</div></pre></td></tr></table></figure></p>
<p>安装less，主题使用less作为css预处理工具：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-renderer-less --save</div></pre></td></tr></table></figure></p>
<p>安装feed,用于生吃RSS：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-feed --save</div></pre></td></tr></table></figure></p>
<p>安装json-content，用于生成静态站点数据，提供搜索功能的数据源：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-json-content --save</div></pre></td></tr></table></figure></p>
<p>开启标签页：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new page tags</div></pre></td></tr></table></figure></p>
<p>修改<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">```</div><div class="line">layout: tags</div><div class="line">noDate: true</div><div class="line">comments: false</div><div class="line">---</div></pre></td></tr></table></figure></p>
<p>修改hexo配置文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">```</div><div class="line">theme: indigo</div></pre></td></tr></table></figure></p>
<p>最后修改主题配置文件<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure></p>
<p>#添加新菜单项遵循以下规则</p>
<h1 id="menu"><a href="#menu" class="headerlink" title="menu:"></a>menu:</h1><h1 id="link-fontawesome图标，省略前缀，本主题前缀为-icon-，必须"><a href="#link-fontawesome图标，省略前缀，本主题前缀为-icon-，必须" class="headerlink" title="link: fontawesome图标，省略前缀，本主题前缀为 icon-，必须"></a>link: fontawesome图标，省略前缀，本主题前缀为 icon-，必须</h1><h1 id="text-About-菜单显示的文字，如果省略即默认与图标一致，首字母会转大写"><a href="#text-About-菜单显示的文字，如果省略即默认与图标一致，首字母会转大写" class="headerlink" title="text: About 菜单显示的文字，如果省略即默认与图标一致，首字母会转大写"></a>text: About 菜单显示的文字，如果省略即默认与图标一致，首字母会转大写</h1><h1 id="url-about-链接，绝对或相对路径，必须。"><a href="#url-about-链接，绝对或相对路径，必须。" class="headerlink" title="url: /about 链接，绝对或相对路径，必须。"></a>url: /about 链接，绝对或相对路径，必须。</h1><h1 id="target-blank-是否跳出，省略则在当前页面打开"><a href="#target-blank-是否跳出，省略则在当前页面打开" class="headerlink" title="target: _blank 是否跳出，省略则在当前页面打开"></a>target: _blank 是否跳出，省略则在当前页面打开</h1><p>menu:<br>  home:<br>    text: 主页<br>    url: /<br>  archives:<br>    url: /archives<br>  tags:<br>    url: /tags<br>  github:<br>    url: <a href="https://github.com/glassweichao" target="_blank" rel="external">https://github.com/glassweichao</a><br>    target: _blank<br>  link:<br>    text: 测试<br>    url: /404<br>rss: /atom.xml</p>
<p>#你的头像,替换掉 indigo/source/img/logo.jpg 即可<br>urlavatar: /img/logo.jpg</p>
<h1 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h1><p>tags:<br>  title: 标签</p>
<p>#是否开启分享<br>share: true</p>
<p>#是否开启搜索<br>search: true</p>
<p>#是否大屏幕下文章页隐藏导航<br>hideMenu: true</p>
<p>#是否开启toc</p>
<p>#toc: false  关闭toc<br>toc:<br>  list_number: true # 是否显示数字排序</p>
<p>#浏览器标签栏小图标<br>favicon: /favicon.ico<br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">最后生成部署，来看看效果吧</div><div class="line">```bash</div><div class="line">hexo clean</div><div class="line">hexo d -g</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。官方文档&lt;a href=&quot;https://hexo.io/zh-cn/docs/index.html&quot;&gt;传送门&lt;/a&gt;。Hexo的安装是个很快速简便的过程，但依然还是有不少坑。这里记录个我的安装过程，给大家一些参考。以下是我安装时系统及软件版本，请尽量保证不低于这些版本号：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;OS ： OS X EI Capitan 10.11.3&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XCode : 7.3&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;hexo : 3.2.2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;node : 4.4.7&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;git : 2.6.4&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://charleswei.me/tags/hexo/"/>
    
  </entry>
  
</feed>
